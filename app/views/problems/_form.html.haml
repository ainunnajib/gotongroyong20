:javascript
  $(function() {
    $('#problemForm').find("input:file").each(function(i, elem) {
      var fileInput    = $(elem);
      var form         = $(fileInput.parents('form:first'));
      var submitButton = form.find('input[type="submit"]');
      var progressBar  = $("<div class='progress-bar progress-bar-success progress-bar-striped' role='progressbar' aria-valuenow='0' aria-valuemin='0' aria-valuemax='100'></div>");
      var barContainer = $("<div class='progress' style='margin-top:10px; display:none'></div>").append(progressBar);
      fileInput.after(barContainer);
      fileInput.fileupload({
        fileInput:       fileInput,
        url:             '#{@s3_direct_post.url}',
        type:            'POST',
        autoUpload:       true,
        formData:         #{@s3_direct_post.fields.to_json.html_safe},
        paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
        dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
        replaceFileInput: false,
        progressall: function (e, data) {
          var progress = parseInt(data.loaded / data.total * 100, 10);
          progressBar.
            css('width', progress + '%').
            attr('aria-valuenow', progress);
        },
        start: function (e) {
          submitButton.prop('disabled', true);
          barContainer.show();
          progressBar.
            css('width', '0%').
            attr('aria-valuenow', 0).
            removeClass("progress-bar-danger").
            addClass("progress-bar-success").
            text("Loading...");
        },
        done: function(e, data) {
          submitButton.prop('disabled', false);
          progressBar.text("Uploading done");

          // extract key and generate URL from response
          var key   = $(data.jqXHR.responseXML).find("Key").text();
          var url   = '//#{@s3_direct_post.url.host}/' + key;

          // create hidden field
          //var input = $("<input />", { type:'hidden', name: fileInput.attr(' name'), value: url })
          fileInput.nextAll(":hidden:first").val(url);
        },
        fail: function(e, data) {
          submitButton.prop('disabled', false);

          progressBar.
            removeClass("progress-bar-success").
            addClass("progress-bar-danger").
            text("Failed");
        }
      });
    });
  });

%div{'ng-app' => 'problemApp', 'ng-controller' => 'NewProblemController as vm'}
  = form_for @problem, html: {class:'form-horizontal', id:'problemForm'} do |f|
    - if @problem.errors.any?
      #error_explanation
        .alert.alert-danger
          %h4= "#{pluralize(@problem.errors.count, "error")} prohibited this problem from being saved:"
          %ul
            - @problem.errors.full_messages.each do |msg|
              %li= msg

    .form-group
      = f.label :title, class: 'col-sm-2 control-label'
      .col-sm-10
        = f.text_field :title, class: 'form-control'
    .form-group
      = f.label :image, class: 'col-sm-2 control-label'
      .col-sm-10
        = file_field_tag 'problem[images_dummy][]'
        = hidden_field_tag 'problem[images][]'
        %br
        = file_field_tag 'problem[images_dummy][]'
        = hidden_field_tag 'problem[images][]'
        %br
        = file_field_tag 'problem[images_dummy][]'
        = hidden_field_tag 'problem[images][]'
        %br
        = file_field_tag 'problem[images_dummy][]'
        = hidden_field_tag 'problem[images][]'
        %br
        = file_field_tag 'problem[images_dummy][]'
        = hidden_field_tag 'problem[images][]'
    .form-group
      = f.label :category_id, class: 'col-sm-2 control-label'
      .col-sm-3
        = f.select :category_id, Problem.all_categories, {}, {class: 'form-control'}
    .form-group
      = f.label :summary, class: 'col-sm-2 control-label'
      .col-sm-10
        = f.text_area :summary, class: 'form-control'
    .form-group
      = f.label :cause, class: 'col-sm-2 control-label'
      .col-sm-10
        = f.text_area :cause, class: 'form-control'
    .form-group
      = f.label :symptom, class: 'col-sm-2 control-label'
      .col-sm-10
        = f.text_area :symptom, class: 'form-control'
    .form-group
      = f.label :effect, class: 'col-sm-2 control-label'
      .col-sm-10
        = f.text_area :effect, class: 'form-control'
    .form-group
      = f.label :urgency, class: 'col-sm-2 control-label'
      .col-sm-2
        = f.select :urgency, Problem.all_urgencies, {}, {class: 'form-control'}
    .form-group
      = f.label :lokasi, class: 'col-sm-2 control-label'
      .col-sm-2
        = f.select :province_id, [], {}, {'ng-model' => 'vm.selectedProvince',
          'ng-options' => 'province.name for province in vm.provinces track by province.id', 'ng-change' => 'vm.getKabupatens()',
          class: 'form-control'}
      .col-sm-2{'ng-if' => 'vm.kabupatens.length > 0'}
        = f.select :kabupaten_id, [], {}, {'ng-model' => 'vm.selectedKabupaten',
          'ng-options' => 'kabupaten.name for kabupaten in vm.kabupatens track by kabupaten.id', 'ng-change' => 'vm.getKecamatans()',
          class: 'form-control'}
      .col-sm-2{'ng-if' => 'vm.kecamatans.length > 0'}
        = f.select :kecamatan_id, [], {}, {'ng-model' => 'vm.selectedKecamatan',
          'ng-options' => 'kecamatan.name for kecamatan in vm.kecamatans track by kecamatan.id', 'ng-change' => 'vm.getKelurahans()',
          class: 'form-control'}
      .col-sm-2{'ng-if' => 'vm.kelurahans.length > 0'}
        = f.select :kelurahan_id, [], {}, {'ng-model' => 'vm.selectedKelurahan',
          'ng-options' => 'kelurahan.name for kelurahan in vm.kelurahans track by kelurahan.id', class: 'form-control'}
    .form-group
      .col-sm-10.col-sm-offset-2
        = f.submit 'Save', class: 'btn btn-primary'
